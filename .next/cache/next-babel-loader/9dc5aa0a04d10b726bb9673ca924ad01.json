{"ast":null,"code":"var _jsxFileName = \"E:\\\\D\\\\ReactJs Projects\\\\Freelance\\\\Nextjs\\\\components\\\\Home\\\\InfoBlocks.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport Head from 'next/head';\n\nclass InfoBlocks extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"setInfoBlocks\", () => {\n      this.setState({\n        infoBlock: this.props.InfoObj\n      });\n    });\n\n    _defineProperty(this, \"getConnects\", () => {\n      let data = this.state.infoBlock.connects;\n      let connects = data.map((data, index) => {\n        return __jsx(\"div\", {\n          className: \"container\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }\n        }, __jsx(\"div\", {\n          className: \"img\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, __jsx(\"img\", {\n          src: data.image,\n          alt: \"Image Description\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }\n        })), __jsx(\"div\", {\n          className: \"textblock\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          className: \"holder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }\n        }, __jsx(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }\n        }, data.heading), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }\n        }, data.paragraph), __jsx(\"ul\", {\n          className: \"info-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }\n        }, data.lists.map((datas, index) => {\n          return __jsx(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 41\n            }\n          }, datas.list);\n        })), __jsx(\"a\", {\n          className: \"more\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }\n        }, data.learnMore))));\n      });\n      return connects;\n    });\n\n    _defineProperty(this, \"getGrowing\", () => {\n      let data = this.state.infoBlock.record;\n      return __jsx(\"div\", {\n        className: \"information-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, __jsx(\"img\", {\n        src: data.image,\n        alt: \"Image description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      })), __jsx(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"textblock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, __jsx(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, data.title), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, data.heading), __jsx(\"a\", {\n        className: \"btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, data.btn)))));\n    });\n\n    this.state = {\n      infoBlock: ''\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.setInfoBlocks();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, __jsx(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700&display=swap\",\n      rel: \"stylesheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), __jsx(\"link\", {\n      href: \"/static/style.css\",\n      rel: \"stylesheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"info-blocks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, this.getConnects()), this.getGrowing());\n  }\n\n}\n\nexport default InfoBlocks;","map":{"version":3,"sources":["E:/D/ReactJs Projects/Freelance/Nextjs/components/Home/InfoBlocks.jsx"],"names":["React","Component","ScrollAnimation","Head","InfoBlocks","constructor","props","setState","infoBlock","InfoObj","data","state","connects","map","index","image","heading","paragraph","lists","datas","list","learnMore","record","title","btn","UNSAFE_componentWillMount","setInfoBlocks","render","getConnects","getGrowing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\nimport Head from 'next/head';\r\n\r\nclass InfoBlocks extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infoBlock: ''\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.setInfoBlocks();\r\n    }\r\n\r\n    setInfoBlocks = () => {\r\n        this.setState({ infoBlock: this.props.InfoObj });\r\n    }\r\n\r\n    getConnects = () => {\r\n        let data = this.state.infoBlock.connects;\r\n        let connects = data.map((data, index) => {\r\n            return (\r\n                <div className=\"container\" key={index}>\r\n                    <div className=\"img\">\r\n                        <img src={data.image} alt=\"Image Description\" />\r\n                    </div>\r\n                    <div className=\"textblock\">\r\n                        <div className=\"holder\">\r\n                            <h2>{data.heading}</h2>\r\n                            <p>{data.paragraph}</p>\r\n                            <ul className=\"info-list\">\r\n                                {data.lists.map((datas, index) => {\r\n                                    return (\r\n                                        <li key={index}>{datas.list}</li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                            <a className=\"more\">{data.learnMore}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return connects;\r\n    }\r\n\r\n    getGrowing = () => {\r\n        let data = this.state.infoBlock.record;\r\n        return (\r\n            <div className=\"information-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"col\">\r\n                        <img src={data.image} alt=\"Image description\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"textblock\">\r\n                            <span className=\"title\">{data.title}</span>\r\n                            <h2>{data.heading}</h2>\r\n                            <a className=\"btn\">{data.btn}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Head>\r\n                    <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700&display=swap\" rel=\"stylesheet\" />\r\n                    <link href=\"/static/style.css\" rel=\"stylesheet\" />\r\n                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\" />\r\n                </Head>\r\n                <div className=\"info-blocks\">\r\n                    {this.getConnects()}\r\n                </div>\r\n                {this.getGrowing()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InfoBlocks;"]},"metadata":{},"sourceType":"module"}