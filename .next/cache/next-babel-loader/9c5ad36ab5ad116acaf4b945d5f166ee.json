{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\D\\\\ReactJs Projects\\\\Freelance\\\\Nextjs\\\\components\\\\Manage\\\\InfoBlocks.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Head from 'next/head';\n\nvar InfoBlocks = /*#__PURE__*/function (_Component) {\n  _inherits(InfoBlocks, _Component);\n\n  var _super = _createSuper(InfoBlocks);\n\n  function InfoBlocks(props) {\n    var _this;\n\n    _classCallCheck(this, InfoBlocks);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setInfoBlocks\", function () {\n      _this.setState({\n        infoBlocks: _this.props.infoObj\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInfoBlocks\", function () {\n      var block = _this.state.infoBlocks.map(function (data, index) {\n        return __jsx(\"div\", {\n          className: \"container\",\n          key: index,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        }, __jsx(\"div\", {\n          className: \"img\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        }, __jsx(\"img\", {\n          src: data.image,\n          alt: \"Image Description\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }\n        })), __jsx(\"div\", {\n          className: \"textblock\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          className: \"holder\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, __jsx(\"h2\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }\n        }, data.heading), __jsx(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }\n        }, data.para), __jsx(\"a\", {\n          className: \"more\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }\n        }, data.learn))));\n      });\n\n      return block;\n    });\n\n    _this.state = {\n      infoBlocks: ''\n    };\n    return _this;\n  }\n\n  _createClass(InfoBlocks, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.setInfoBlocks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, __jsx(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700&display=swap\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }), __jsx(\"link\", {\n        href: \"/static/style.css\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: \"info-blocks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, this.getInfoBlocks()));\n    }\n  }]);\n\n  return InfoBlocks;\n}(Component);\n\nexport default InfoBlocks;","map":{"version":3,"sources":["E:/D/ReactJs Projects/Freelance/Nextjs/components/Manage/InfoBlocks.jsx"],"names":["React","Component","Head","InfoBlocks","props","setState","infoBlocks","infoObj","block","state","map","data","index","image","heading","para","learn","setInfoBlocks","getInfoBlocks"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,oEAWL,YAAK;AACf,YAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAE,MAAKF,KAAL,CAAWG;AAAxB,OAAd;AACH,KAbkB;;AAAA,oEAeL,YAAK;AACf,UAAIC,KAAK,GAAG,MAAKC,KAAL,CAAWH,UAAX,CAAsBI,GAAtB,CAA0B,UAACC,IAAD,EAAOC,KAAP,EAAgB;AAClD,eACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAED,IAAI,CAACE,KAAf;AAAsB,UAAA,GAAG,EAAC,mBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,EAII;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,IAAI,CAACG,OAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIH,IAAI,CAACI,IAAT,CAFJ,EAGI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBJ,IAAI,CAACK,KAA1B,CAHJ,CADJ,CAJJ,CADJ;AAcH,OAfW,CAAZ;;AAgBA,aAAOR,KAAP;AACH,KAjCkB;;AAEf,UAAKC,KAAL,GAAa;AACTH,MAAAA,UAAU,EAAE;AADH,KAAb;AAFe;AAKlB;;;;gDAE2B;AACxB,WAAKW,aAAL;AACH;;;6BA0BQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,IAAI,EAAC,qFAAX;AAAiG,QAAA,GAAG,EAAC,YAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAM,QAAA,IAAI,EAAC,mBAAX;AAA+B,QAAA,GAAG,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,aAAL,EADL,CALJ,CADJ;AAWH;;;;EAjDoBjB,S;;AAoDzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Head from 'next/head';\r\n\r\nclass InfoBlocks extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infoBlocks: ''\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.setInfoBlocks();\r\n    }\r\n\r\n    setInfoBlocks=()=> {\r\n        this.setState({infoBlocks: this.props.infoObj});\r\n    }\r\n\r\n    getInfoBlocks=()=> {\r\n        let block = this.state.infoBlocks.map((data, index)=> {\r\n            return(\r\n                <div className=\"container\" key={index}>\r\n                    <div className=\"img\">\r\n                        <img src={data.image} alt=\"Image Description\" />\r\n                    </div>\r\n                    <div className=\"textblock\">\r\n                        <div className=\"holder\">\r\n                            <h2>{data.heading}</h2>\r\n                            <p>{data.para}</p>\r\n                            <a className=\"more\">{data.learn}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return block;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Head>\r\n                    <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700&display=swap\" rel=\"stylesheet\" />\r\n                    <link href=\"/static/style.css\" rel=\"stylesheet\" />\r\n                </Head>\r\n                <div className=\"info-blocks\">\r\n                    {this.getInfoBlocks()}   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InfoBlocks;"]},"metadata":{},"sourceType":"module"}