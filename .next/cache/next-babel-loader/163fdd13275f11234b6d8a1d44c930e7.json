{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\D\\\\ReactJs Projects\\\\Freelance\\\\Nextjs\\\\components\\\\Home\\\\Stats.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Head from 'next/head';\n\nvar Stats = /*#__PURE__*/function (_Component) {\n  _inherits(Stats, _Component);\n\n  var _super = _createSuper(Stats);\n\n  function Stats(props) {\n    var _this;\n\n    _classCallCheck(this, Stats);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setStats\", function () {\n      _this.setState({\n        stats: _this.props.statsObj,\n        homeInfo: _this.props.homeInfoObj\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getHomeInfo\", function () {\n      var data = _this.state.homeInfo;\n\n      __jsx(\"div\", {\n        className: \"access-block\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"info\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }, data.heading), __jsx(\"a\", {\n        href: \"#\",\n        className: \"btn\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, data.btn1), __jsx(\"a\", {\n        href: \"#\",\n        className: \"btn full\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, data.btn2)), __jsx(\"div\", {\n        className: \"info-columns\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, data.cols.map(function (items, index) {\n        return __jsx(\"div\", {\n          className: \"col\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }\n        }, __jsx(\"span\", {\n          className: \"title\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }\n        }, __jsx(\"img\", {\n          src: items.image,\n          alt: \"Image description\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 57\n          }\n        }), \" \", items.title), __jsx(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }\n        }, items.para));\n      }))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getStats\", function () {\n      var data = _this.state.stats;\n      return __jsx(\"div\", {\n        className: \"stats-section\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"head\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, __jsx(\"span\", {\n        className: \"title\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, data.title), __jsx(\"h2\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, data.heading)), __jsx(\"div\", {\n        className: \"cols\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, data.cols.map(function (items, index) {\n        return __jsx(\"div\", {\n          className: \"col\",\n          key: index,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          className: \"img\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }\n        }, __jsx(\"img\", {\n          src: items.image,\n          alt: \"Image Description\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }\n        })), __jsx(\"h3\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }\n        }, items.heading), __jsx(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }\n        }, items.number), __jsx(\"strong\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }\n        }, items.type));\n      }))));\n    });\n\n    _this.state = {\n      stats: '',\n      homeInfo: ''\n    };\n    return _this;\n  }\n\n  _createClass(Stats, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.setStats();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, __jsx(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700&display=swap\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }), __jsx(\"link\", {\n        href: \"/static/style.css\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      })), this.getStats(), this.getHomeInfo());\n    }\n  }]);\n\n  return Stats;\n}(Component);\n\nexport default Stats;","map":{"version":3,"sources":["E:/D/ReactJs Projects/Freelance/Nextjs/components/Home/Stats.jsx"],"names":["React","Component","Head","Stats","props","setState","stats","statsObj","homeInfo","homeInfoObj","data","state","heading","btn1","btn2","cols","map","items","index","image","title","para","number","type","setStats","getStats","getHomeInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Head from 'next/head';\r\n\r\nclass Stats extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stats: '',\r\n            homeInfo: ''\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.setStats();\r\n    }\r\n\r\n    setStats = () => {\r\n        this.setState({ stats: this.props.statsObj, homeInfo: this.props.homeInfoObj });\r\n    }\r\n\r\n    getHomeInfo=()=> {\r\n        let data = this.state.homeInfo;\r\n        <div className=\"access-block\">\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <h2>{data.heading}</h2>\r\n                    <a href=\"#\" className=\"btn\">{data.btn1}</a>\r\n                    <a href=\"#\" className=\"btn full\">{data.btn2}</a>\r\n                </div>\r\n                <div className=\"info-columns\">\r\n                    {data.cols.map((items, index)=> {\r\n                        return(\r\n                            <div className=\"col\">\r\n                                <span className=\"title\"><img src={items.image} alt=\"Image description\" /> {items.title}</span>\r\n                                <p>{items.para}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    getStats = () => {\r\n        let data = this.state.stats;\r\n        return (\r\n            <div className=\"stats-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"head\">\r\n                        <span className=\"title\">{data.title}</span>\r\n                        <h2>{data.heading}</h2>\r\n                    </div>\r\n                    <div className=\"cols\">\r\n                        {data.cols.map((items, index) => {\r\n                            return (\r\n                                <div className=\"col\" key={index}>\r\n                                    <div className=\"img\">\r\n                                        <img src={items.image} alt=\"Image Description\" />\r\n                                    </div>\r\n                                    <h3>{items.heading}</h3>\r\n                                    <span>{items.number}</span>\r\n                                    <strong>{items.type}</strong>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Head>\r\n                    <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700&display=swap\" rel=\"stylesheet\" />\r\n                    <link href=\"/static/style.css\" rel=\"stylesheet\" />\r\n                </Head>\r\n                {this.getStats()}\r\n                {this.getHomeInfo()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stats;"]},"metadata":{},"sourceType":"module"}